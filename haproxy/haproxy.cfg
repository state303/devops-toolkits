#---------------------------------------------------------------
# GLOBAL
#---------------------------------------------------------------

# generated 2022-08-12, Mozilla Guideline v5.6, HAProxy 2.1, OpenSSL 1.1.1k, intermediate configuration
# https://ssl-config.mozilla.org/#server=haproxy&version=2.1&config=intermediate&openssl=1.1.1k&guideline=5.6
global
        log /dev/log    local0
        log /dev/log    local1 notice
        chroot /var/lib/haproxy
        stats socket /run/haproxy/admin.sock mode 660 level admin expose-fd listeners
        stats timeout 30s
        user  haproxy
        group haproxy
        daemon

        # in case you would like to multi-threading with HAProxy...
        # nbproc 1
        # nbthread 4
        # cpu-map auto:1/1-4 0-3

        ca-base /etc/ssl/certs
        crt-base /etc/ssl/private

        ssl-default-bind-ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384
        ssl-default-bind-ciphersuites TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256
        ssl-default-bind-options prefer-client-ciphers no-sslv3 no-tlsv10 no-tlsv11 no-tls-tickets
        ssl-default-server-ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384
        ssl-default-server-ciphersuites TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256
        ssl-default-server-options no-sslv3 no-tlsv10 no-tlsv11 no-tls-tickets

        # curl https://ssl-config.mozilla.org/ffdhe2048.txt > /path/to/dhparam
        # ssl-dh-param-file /path/to/dhparam

        # HSTS
        # http-response set-header Strict-Transport-Security max-age=63072000

#---------------------------------------------------------------
# DEFAULT
#---------------------------------------------------------------
defaults
        log             global
        mode            http
        option          httplog
        option          dontlognull
        option          log-health-checks
        option          log-separate-errors
        retries         3
        timeout connect 5000
        timeout client  50000
        timeout server  50000
        maxconn         10000

        errorfile 400 /etc/haproxy/errors/400.http
        errorfile 403 /etc/haproxy/errors/403.http
        errorfile 408 /etc/haproxy/errors/408.http
        errorfile 500 /etc/haproxy/errors/500.http
        errorfile 502 /etc/haproxy/errors/502.http
        errorfile 503 /etc/haproxy/errors/503.http
        errorfile 504 /etc/haproxy/errors/504.http

#---------------------------------------------------------------
# TABLES
#---------------------------------------------------------------
backend abuse
	stick-table type ip size 100k expire 5s store conn_rate(3s),http_req_rate(3s),http_err_rate(3s)

#---------------------------------------------------------------
# FRONTEND
#---------------------------------------------------------------

# TCP 443
frontend tcp_in
        mode tcp
        bind *:80
        bind *:443
        option  tcplog
        option  dontlognull
    
        # acl clienthello req_ssl_hello_type 1
       
	# give some time to resolve request (if you would like to use SSL beyond this proxy)
        # and accept client hello first
        # tcp-request inspect-delay 5s
        # tcp-request content accept if clienthello

        # use_backend be_there if { req_ssl_sni -i somewhere.dsub.io }
        # use_backend be_there if { req_ssl_sni -m end somewhere.dsub.io }
        default_backend tcp_to_https

# TCP 8443
frontend http_in
        mode http
#       bind *:8443 ssl crt /etc/haproxy/certs/certificate.pem alpn h2,http/1.1
        bind *:8443 alpn h2,http/1.1

	http-request track-sc0 src table abuse

	acl rr_abuse	sc0_http_req_rate gt 50
	acl cr_abuse    sc0_conn_rate gt 20
	acl er_abuse	sc0_http_err_rate gt 10

        # allow whitelist
	tcp-request connection accept if { src -f /etc/haproxy/whitelist.lst }
	http-request deny if cr_abuse er_abuse 

       	use_backend be_429 if rr_abuse
        use_backend nginx if hdr(host) -i nginx.your.domain
	# redirect scheme https if !{ ssl_fc }
        # http-request set-header X-Forwarded-Proto https if { ssl_fc }
        # http-request set-header X-Forwarded-Proto http if !{ ssl_fc }
        default_backend nginx

#---------------------------------------------------------------
# BACKEND
#---------------------------------------------------------------

# Route to HTTP termination
backend tcp_to_https
        mode tcp
        server default 127.0.0.1:8443

# Not Matched
backend nomatch
        mode http
        http-request deny deny_status 400

backend nginx
	mode http
	server default 127.0.0.1:8080

# Rate Limit Exceeded
backend be_429
        mode http
        errorfile 500 /etc/haproxy/errors/429.http
